generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  company       String?
  JobTitle      String?
  accounts      Account[]
  spaces        Space[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
 
  @@map("users")  
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id        String  @id @default(cuid())
  email     String  @unique
  token     String  @unique
  expires   DateTime
  @@unique([email,token])
}

model Space {
  id        String       @id @default(cuid())
  slug      String       @unique
  name      String 
  userId    String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  user      User         @relation(fields: [userId], references: [id])
  details   SpaceDetails?
}

model SpaceDetails {
  id                  String   @id @default(cuid())
  spaceId             String   @unique
  coverPageTitle      String
  coverPageDescription String
  coverPageImageUrl   String?
  coverPageBtnText    String
  userPhoto           Boolean
  userFirstName       Boolean 
  userLastName        Boolean
  userEmail           Boolean 
  userJobTitle        Boolean
  userCompany         Boolean
  testimonialTextType Boolean 
  testimonialVideoType Boolean 
  testimonialPageTitle String
  testimonialPageDescription String
  tags                String[]
  questionHeader      String
  questions           String[]
  thankyouTitle       String
  thankyouMessage     String
  theme               Int 
  btnColor            String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  space               Space    @relation(fields: [spaceId], references: [id], onDelete: Cascade)
}
